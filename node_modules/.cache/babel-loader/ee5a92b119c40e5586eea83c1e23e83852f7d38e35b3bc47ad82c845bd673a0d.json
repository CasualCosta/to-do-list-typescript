{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Documentos\\\\Programa\\xE7\\xE3o\\\\taskify\\\\src\\\\components\\\\TodoList.tsx\";\nimport React from 'react';\n// import \"./styles.css\";\nimport SingleTodo from './SingleTodo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = _ref => {\n  let {\n    todos,\n    completedTodos,\n    setTodos,\n    completeTodo,\n    cancelCompletion,\n    deleteTodo,\n    editTodo\n  } = _ref;\n  const deleteIncomplete = id => deleteTodo(id, todos);\n  const deleteCompleted = id => deleteTodo(id, completedTodos);\n  const editIncomplete = id => editTodo(id, todos);\n  const editCompleted = id => editTodo(id, completedTodos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"todos__heading\",\n        children: \"Active Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), todos.map(todo => {\n        return /*#__PURE__*/_jsxDEV(SingleTodo, {\n          todo: todo,\n          toggleCompletion: completeTodo,\n          deleteTodo: deleteIncomplete,\n          editTodo: editIncomplete\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos__heading\",\n      children: todos.map(todo => {\n        return /*#__PURE__*/_jsxDEV(SingleTodo, {\n          todo: todo,\n          toggleCompletion: completeTodo,\n          deleteTodo: deleteIncomplete,\n          editTodo: editIncomplete\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","SingleTodo","TodoList","todos","completedTodos","setTodos","completeTodo","cancelCompletion","deleteTodo","editTodo","deleteIncomplete","id","deleteCompleted","editIncomplete","editCompleted","map","todo"],"sources":["C:/Users/felip/OneDrive/Documentos/Programação/taskify/src/components/TodoList.tsx"],"sourcesContent":["import React from 'react'\r\nimport Todo from './Todo'\r\n// import \"./styles.css\";\r\nimport SingleTodo from './SingleTodo';\r\n\r\ninterface Props {\r\n    todos: Todo[]\r\n    completedTodos: Todo[]\r\n    setTodos: React.Dispatch<React.SetStateAction<Todo[]>>\r\n    completeTodo: (id: string) => void\r\n    cancelCompletion: (id: string) => void\r\n    deleteTodo: (id: string, list: Todo[]) => void\r\n    editTodo: (id: string, list: Todo[]) => void\r\n}\r\n\r\nconst TodoList:React.FunctionComponent<Props> = ({\r\n  todos, completedTodos, setTodos, completeTodo, cancelCompletion, deleteTodo, editTodo}: Props) => {\r\n  const deleteIncomplete = (id: string) : void => deleteTodo(id, todos)\r\n  const deleteCompleted = (id: string) : void => deleteTodo(id, completedTodos)\r\n  const editIncomplete = (id: string) : void => editTodo(id, todos)\r\n  const editCompleted = (id: string) : void => editTodo(id, completedTodos)\r\n  return (\r\n    <div className=\"container\">\r\n      <div className='todos'>\r\n        <span className='todos__heading'>Active Tasks</span>\r\n          {todos.map((todo:Todo) => {\r\n            return(\r\n              <SingleTodo key={todo.id} todo={todo} toggleCompletion={completeTodo} \r\n              deleteTodo={deleteIncomplete} editTodo={editIncomplete} />\r\n            )\r\n          })}\r\n      </div>\r\n      <div className=\"todos__heading\">\r\n          {todos.map((todo:Todo) => {\r\n            return(\r\n              <SingleTodo key={todo.id} todo={todo} toggleCompletion={completeTodo} \r\n              deleteTodo={deleteIncomplete} editTodo={editIncomplete} />\r\n            )\r\n          })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB;AACA,OAAOC,UAAU,MAAM,cAAc;AAAC;AAYtC,MAAMC,QAAuC,GAAG,QACoD;EAAA,IADnD;IAC/CC,KAAK;IAAEC,cAAc;IAAEC,QAAQ;IAAEC,YAAY;IAAEC,gBAAgB;IAAEC,UAAU;IAAEC;EAAe,CAAC;EAC7F,MAAMC,gBAAgB,GAAIC,EAAU,IAAYH,UAAU,CAACG,EAAE,EAAER,KAAK,CAAC;EACrE,MAAMS,eAAe,GAAID,EAAU,IAAYH,UAAU,CAACG,EAAE,EAAEP,cAAc,CAAC;EAC7E,MAAMS,cAAc,GAAIF,EAAU,IAAYF,QAAQ,CAACE,EAAE,EAAER,KAAK,CAAC;EACjE,MAAMW,aAAa,GAAIH,EAAU,IAAYF,QAAQ,CAACE,EAAE,EAAEP,cAAc,CAAC;EACzE,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAK,SAAS,EAAC,OAAO;MAAA,wBACpB;QAAM,SAAS,EAAC,gBAAgB;QAAA,UAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAO,EACjDD,KAAK,CAACY,GAAG,CAAEC,IAAS,IAAK;QACxB,oBACE,QAAC,UAAU;UAAe,IAAI,EAAEA,IAAK;UAAC,gBAAgB,EAAEV,YAAa;UACrE,UAAU,EAAEI,gBAAiB;UAAC,QAAQ,EAAEG;QAAe,GADtCG,IAAI,CAACL,EAAE;UAAA;UAAA;UAAA;QAAA,QACkC;MAE9D,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACA,eACN;MAAK,SAAS,EAAC,gBAAgB;MAAA,UAC1BR,KAAK,CAACY,GAAG,CAAEC,IAAS,IAAK;QACxB,oBACE,QAAC,UAAU;UAAe,IAAI,EAAEA,IAAK;UAAC,gBAAgB,EAAEV,YAAa;UACrE,UAAU,EAAEI,gBAAiB;UAAC,QAAQ,EAAEG;QAAe,GADtCG,IAAI,CAACL,EAAE;UAAA;UAAA;UAAA;QAAA,QACkC;MAE9D,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,KA3BKT,QAAuC;AA6B7C,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}